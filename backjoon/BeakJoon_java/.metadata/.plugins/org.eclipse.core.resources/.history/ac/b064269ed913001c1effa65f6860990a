package backjoon;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;


// 위상정렬에서 DFS 방식보단 Qeueu를 쓰는 것이 효율적 
public class backjoon_2252 {

	public static int sortList[];
	public static int visited[];
	
	public static void main(String[] args) throws IOException {
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
		
		// 문자열 뛰어서 받기 위해서  StringTokenizer 사용
		StringTokenizer st = new StringTokenizer(reader.readLine());
		
		// M
		int M = Integer.parseInt(st.nextToken());
		int N = Integer.parseInt(st.nextToken());
		int numN;
		int numM;
		
		for(int i = 0; i < N; i++) {
			numN = Integer.parseInt(st.nextToken());
			numM = Integer.parseInt(st.nextToken());
				
		}
		
	
		
		
		writer.flush();
		writer.close();
	}
}
